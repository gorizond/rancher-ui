{"version":3,"file":"gorizond-ui-0.1.5.umd.min.179.js","mappings":"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","sources":["webpack://gorizond-ui-0.1.5/../../node_modules/@rancher/shell/rancher-components/Card/Card.vue?823d","webpack://gorizond-ui-0.1.5/../../node_modules/@rancher/shell/rancher-components/Card/Card.vue","webpack://gorizond-ui-0.1.5/../../node_modules/tabbable/dist/index.esm.js","webpack://gorizond-ui-0.1.5/../../node_modules/focus-trap/dist/focus-trap.esm.js","webpack://gorizond-ui-0.1.5/../../node_modules/@rancher/shell/composables/focusTrap.ts","webpack://gorizond-ui-0.1.5/../../node_modules/@rancher/shell/rancher-components/Card/Card.vue?89c4","webpack://gorizond-ui-0.1.5/../../node_modules/@rancher/shell/rancher-components/Card/Card.vue?0817","webpack://gorizond-ui-0.1.5/../../node_modules/@rancher/shell/rancher-components/Card/Card.vue?f316"],"sourcesContent":["import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"card-wrap\" }\nconst _hoisted_2 = {\n  class: \"card-title\",\n  \"data-testid\": \"card-title-slot\"\n}\nconst _hoisted_3 = {\n  class: \"card-body\",\n  \"data-testid\": \"card-body-slot\"\n}\nconst _hoisted_4 = {\n  key: 0,\n  class: \"card-actions\",\n  \"data-testid\": \"card-actions-slot\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    id: \"focus-trap-card-container-element\",\n    class: _normalizeClass([\"card-container\", {'highlight-border': _ctx.showHighlightBorder, 'card-sticky': _ctx.sticky}]),\n    \"data-testid\": \"card\"\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _renderSlot(_ctx.$slots, \"title\", {}, () => [\n          _createTextVNode(_toDisplayString(_ctx.title), 1)\n        ])\n      ]),\n      _cache[1] || (_cache[1] = _createElementVNode(\"hr\", null, null, -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _renderSlot(_ctx.$slots, \"body\", {}, () => [\n          _createTextVNode(_toDisplayString(_ctx.content), 1)\n        ])\n      ]),\n      (_ctx.showActions)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            _renderSlot(_ctx.$slots, \"actions\", {}, () => [\n              _createElementVNode(\"button\", {\n                class: \"btn role-primary\",\n                onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.buttonAction && _ctx.buttonAction(...args)))\n              }, _toDisplayString(_ctx.buttonText), 1)\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ])\n  ], 2))\n}","<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue';\nimport { useBasicSetupFocusTrap } from '@shell/composables/focusTrap';\n\nexport default defineComponent({\n\n  name:  'Card',\n  props: {\n    /**\n     * The card's title.\n     */\n    title: {\n      type:    String,\n      default: ''\n    },\n    /**\n     * The text content for the card's body.\n     */\n    content: {\n      type:    String,\n      default: ''\n    },\n    /**\n     * The function to invoke when the default action button is clicked.\n     */\n    buttonAction: {\n      type:    Function as PropType<(event: MouseEvent) => void>,\n      default: (): void => { }\n    },\n    /**\n     * The text for the default action button.\n     */\n    buttonText: {\n      type:    String,\n      default: 'go'\n    },\n    /**\n     * Toggles the card's highlight-border class.\n     */\n    showHighlightBorder: {\n      type:    Boolean,\n      default: true\n    },\n    /**\n     * Toggles the card's Actions section.\n     */\n    showActions: {\n      type:    Boolean,\n      default: true\n    },\n    sticky: {\n      type:    Boolean,\n      default: false,\n    },\n    triggerFocusTrap: {\n      type:    Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    if (props.triggerFocusTrap) {\n      useBasicSetupFocusTrap('#focus-trap-card-container-element', {\n        // needs to be false because of import YAML modal from header\n        // where the YAML editor itself is a focus trap\n        // and we can't have it superseed the \"escape key\" to blur that UI element\n        // In this case the focus trap moves the focus out of the modal\n        // correctly once it closes because of the \"onBeforeUnmount\" trigger\n        escapeDeactivates: false,\n        allowOutsideClick: true,\n      });\n    }\n  }\n});\n</script>\n\n<template>\n  <div\n    id=\"focus-trap-card-container-element\"\n    class=\"card-container\"\n    :class=\"{'highlight-border': showHighlightBorder, 'card-sticky': sticky}\"\n    data-testid=\"card\"\n  >\n    <div class=\"card-wrap\">\n      <div\n        class=\"card-title\"\n        data-testid=\"card-title-slot\"\n      >\n        <slot name=\"title\">\n          {{ title }}\n        </slot>\n      </div>\n      <hr>\n      <div\n        class=\"card-body\"\n        data-testid=\"card-body-slot\"\n      >\n        <slot name=\"body\">\n          {{ content }}\n        </slot>\n      </div>\n      <div\n        v-if=\"showActions\"\n        class=\"card-actions\"\n        data-testid=\"card-actions-slot\"\n      >\n        <slot name=\"actions\">\n          <button\n            class=\"btn role-primary\"\n            @click=\"buttonAction\"\n          >\n            {{ buttonText }}\n          </button>\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang='scss'>\n .card-container {\n  &.highlight-border {\n    border-left: 5px solid var(--primary);\n  }\n  border-radius: var(--border-radius);\n  display: flex;\n  flex-basis: 40%;\n  margin: 10px;\n  min-height: 100px;\n  padding: 10px;\n  box-shadow: 0 0 20px var(--shadow);\n  &:not(.top) {\n    align-items: top;\n    flex-direction: row;\n    justify-content: start;\n  }\n  .card-wrap {\n    width: 100%;\n  }\n   & .card-body {\n    color: var(--input-label);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n   }\n   & .card-actions {\n     align-self: end;\n     display: flex;\n     padding-top: 20px;\n   }\n   & .card-title {\n    align-items: center;\n    display: flex;\n    width: 100%;\n     h5 {\n       margin: 0;\n     }\n    .flex-right {\n      margin-left: auto;\n    }\n   }\n\n  // Sticky mode will stick header and footer to top and bottom with content in the middle scrolling\n   &.card-sticky {\n      // display: flex;\n      // flex-direction: column;\n      overflow: hidden;\n\n    .card-wrap {\n      display: flex;\n      flex-direction: column;\n\n      .card-body {\n        justify-content: flex-start;\n        overflow: auto;\n      }\n\n      > * {\n        flex: 0;\n      }\n\n      .card-body {\n        flex: 1;\n      }\n    }\n   }\n }\n</style>\n","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.6.2\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || (// fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$hasFallback = _ref2.hasFallback,\n      hasFallback = _ref2$hasFallback === void 0 ? false : _ref2$hasFallback,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === void 0 ? [] : _ref2$params;\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue.apply(void 0, _toConsumableArray(params));\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\"`\".concat(optionName, \"` appears to be an invalid selector; error=\\\"\").concat(err.message, \"\\\"\"));\n      }\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus', {\n      hasFallback: true\n    });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || node && !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement]\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref3) {\n    var target = _ref3.target,\n      event = _ref3.event,\n      _ref3$isBackward = _ref3.isBackward,\n      isBackward = _ref3$isBackward === void 0 ? false : _ref3$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = state.tabbableGroups.findIndex(function (_ref4) {\n          var firstTabbableNode = _ref4.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = state.tabbableGroups.findIndex(function (_ref5) {\n          var lastTabbableNode = _ref5.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n  var checkTabKey = function checkTabKey(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  var checkEscapeKey = function checkEscapeKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 || onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 || onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 || onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","/**\n * focusTrap is a composable based on the \"focus-trap\" package that allows us to implement focus traps\n * on components for keyboard navigation is a safe and reusable way\n */\nimport { watch, nextTick, onMounted, onBeforeUnmount } from 'vue';\nimport { createFocusTrap, FocusTrap } from 'focus-trap';\n\nexport function getFirstFocusableElement(element:any = document):any {\n  const focusableElements = element.querySelectorAll(\n    'a, button, input, textarea, select, details,[tabindex]:not([tabindex=\"-1\"])'\n  );\n  const filteredFocusableElements:any = [];\n\n  focusableElements.forEach((el:any) => {\n    if (!el.hasAttribute('disabled')) {\n      filteredFocusableElements.push(el);\n    }\n  });\n\n  return filteredFocusableElements.length ? filteredFocusableElements[0] : document.body;\n}\n\nexport const DEFAULT_FOCUS_TRAP_OPTS = {\n  escapeDeactivates: true,\n  allowOutsideClick: true\n};\n\nexport function useBasicSetupFocusTrap(focusElement: string | HTMLElement, opts:any = DEFAULT_FOCUS_TRAP_OPTS) {\n  let focusTrapInstance: FocusTrap;\n  let focusEl;\n\n  onMounted(() => {\n    focusEl = typeof focusElement === 'string' ? document.querySelector(focusElement) as HTMLElement : focusElement;\n\n    focusTrapInstance = createFocusTrap(focusEl, opts);\n\n    nextTick(() => {\n      focusTrapInstance.activate();\n    });\n  });\n\n  onBeforeUnmount(() => {\n    if (Object.keys(focusTrapInstance).length) {\n      focusTrapInstance.deactivate();\n    }\n  });\n}\n\nexport function useWatcherBasedSetupFocusTrapWithDestroyIncluded(watchVar:any, focusElement: string | HTMLElement, opts:any = DEFAULT_FOCUS_TRAP_OPTS) {\n  let focusTrapInstance: FocusTrap;\n  let focusEl;\n\n  watch(watchVar, (neu) => {\n    if (neu) {\n      nextTick(() => {\n        focusEl = typeof focusElement === 'string' ? document.querySelector(focusElement) as HTMLElement : focusElement;\n\n        focusTrapInstance = createFocusTrap(focusEl, opts);\n\n        nextTick(() => {\n          focusTrapInstance.activate();\n        });\n      });\n    } else if (!neu && Object.keys(focusTrapInstance).length) {\n      focusTrapInstance.deactivate();\n    }\n  });\n}\n","import { render } from \"./Card.vue?vue&type=template&id=27fa983c&ts=true\"\nimport script from \"./Card.vue?vue&type=script&lang=ts\"\nexport * from \"./Card.vue?vue&type=script&lang=ts\"\n\nimport \"./Card.vue?vue&type=style&index=0&id=27fa983c&lang=scss\"\n\nimport exportComponent from \"../../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../vue-loader/dist/stylePostLoader.js!../../../../postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../vue-loader/dist/index.js??ruleSet[0].use[1]!./Card.vue?vue&type=style&index=0&id=27fa983c&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"86893f82\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".card-container{border-radius:var(--border-radius);display:flex;flex-basis:40%;margin:10px;min-height:100px;padding:10px;box-shadow:0 0 20px var(--shadow)}.card-container.highlight-border{border-left:5px solid var(--primary)}.card-container:not(.top){align-items:top;flex-direction:row;justify-content:start}.card-container .card-wrap{width:100%}.card-container .card-body{color:var(--input-label);display:flex;flex-direction:column;justify-content:center}.card-container .card-actions{align-self:end;display:flex;padding-top:20px}.card-container .card-title{align-items:center;display:flex;width:100%}.card-container .card-title h5{margin:0}.card-container .card-title .flex-right{margin-left:auto}.card-container.card-sticky{overflow:hidden}.card-container.card-sticky .card-wrap{display:flex;flex-direction:column}.card-container.card-sticky .card-wrap .card-body{justify-content:flex-start;overflow:auto}.card-container.card-sticky .card-wrap>*{flex:0}.card-container.card-sticky .card-wrap .card-body{flex:1}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","id","_normalizeClass","showHighlightBorder","sticky","_createElementVNode","_renderSlot","$slots","_createTextVNode","_toDisplayString","title","content","showActions","onClick","args","buttonAction","buttonText","_createCommentVNode","candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","node","lookUp","_node$getAttribute","inertAtt","getAttribute","inert","result","parentNode","isContentEditable","_node$getAttribute2","attValue","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","children","nestedCandidates","flatten","push","scopeParent","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","isNaN","parseInt","getTabIndex","Error","tabIndex","test","getSortOrderTabIndex","isScope","sortOrderedTabbables","a","b","documentOrder","isInput","isHiddenInput","type","isDetailsWithSummary","r","some","child","getCheckedRadio","nodes","form","i","checked","isTabbableRadio","name","radioSet","radioScope","queryRadios","window","CSS","escape","err","console","error","message","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRoot","nodeRoot","nodeRootHost","host","attached","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","contains","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","_ref","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","container","bind","focusable","isTabbable","focusableCandidateSelector","isFocusable","_arrayLikeToArray","e","n","_arrayWithoutHoles","isArray","_defineProperty","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","_iterableToArray","Symbol","iterator","_nonIterableSpread","TypeError","ownKeys","keys","getOwnPropertySymbols","o","getOwnPropertyDescriptor","_objectSpread2","arguments","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","_unsupportedIterableToArray","_toPrimitive","toPrimitive","String","Number","toString","constructor","activeFocusTraps","activateTrap","trapStack","trap","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","isSelectableInput","toLowerCase","select","isEscapeEvent","keyCode","isTabEvent","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","valueOrHandler","_len","params","_key","getActualTarget","event","target","composedPath","internalTrapStack","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","undefined","recentNavEvent","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","findIndex","tabbableNodes","find","getNodeForOption","_ref2","_ref2$hasFallback","hasFallback","_ref2$params","optionValue","querySelector","getInitialFocusNode","tabbableOptions","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","focusableNodes","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","reverse","posTabIndexesFound","nextTabbableNode","forward","nodeIdx","group","g","_getActiveElement","_tryFocus","focus","preventScroll","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref3","_ref3$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref4","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref5","_destinationGroupIndex","_destinationGroup","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","nextNode","stopImmediatePropagation","navAcrossContainers","mruContainerIdx","mruTabIdx","checkKeyNav","checkTabKey","checkEscapeKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","checkDomRemoval","mutations","isFocusedNodeRemoved","mutation","removedNodes","mutationObserver","MutationObserver","updateObservedNodes","disconnect","observe","subtree","childList","activate","activateOptions","this","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","updateContainerElements","containerElements","elementsAsArray","Boolean","DEFAULT_FOCUS_TRAP_OPTS","useBasicSetupFocusTrap","focusElement","opts","focusTrapInstance","focusEl","onMounted","createFocusTrap","nextTick","onBeforeUnmount","defineComponent","props","default","Function","triggerFocusTrap","setup","__exports__","__esModule","module","locals","exports","add","___CSS_LOADER_EXPORT___"],"sourceRoot":""}