"use strict";(("undefined"!==typeof self?self:this)["webpackChunkgorizond_ui_0_1_5"]=("undefined"!==typeof self?self:this)["webpackChunkgorizond_ui_0_1_5"]||[]).push([[739],{60381:function(e,a,t){t.r(a),t.d(a,{default:function(){return k}});var o=t(9274);const s={class:"p-6 space-y-6"},n={class:"type-title"},r={class:"space-y-4"};function l(e,a,t,l,i,d){const c=(0,o.resolveComponent)("Banner"),m=(0,o.resolveComponent)("LabeledInput"),p=(0,o.resolveComponent)("LabeledSelect"),u=(0,o.resolveComponent)("Card");return(0,o.openBlock)(),(0,o.createElementBlock)("div",s,[i.loaded?((0,o.openBlock)(),(0,o.createBlock)(u,{key:1,showActions:!0,buttonAction:d.onSave,buttonText:"create"===t.mode?"Create":"Save",showHighlightBorder:!1},{title:(0,o.withCtx)((()=>[(0,o.createElementVNode)("div",n,[(0,o.createElementVNode)("h3",null,(0,o.toDisplayString)(t.mode)+" Gorizond Cluster",1)])])),body:(0,o.withCtx)((()=>[(0,o.createElementVNode)("div",r,[(0,o.createVNode)(m,{value:i.model.metadata.name,"onUpdate:value":a[0]||(a[0]=e=>i.model.metadata.name=e),label:"Cluster Name",placeholder:"Enter cluster name",required:"create"===t.mode,disabled:"create"!==t.mode},null,8,["value","required","disabled"]),(0,o.createVNode)(p,{value:i.model.metadata.namespace,"onUpdate:value":a[1]||(a[1]=e=>i.model.metadata.namespace=e),label:"Workspace (Namespace)",options:i.workspaces,"option-label":"label","option-key":"value",disabled:"create"!==t.mode,required:"create"===t.mode},null,8,["value","options","disabled","required"]),(0,o.createVNode)(p,{disabled:"view"===t.mode,value:i.model.spec.kubernetesVersion,"onUpdate:value":a[2]||(a[2]=e=>i.model.spec.kubernetesVersion=e),label:"Kubernetes Version",options:i.k8sVersions,required:""},null,8,["disabled","value","options"])])])),_:1},8,["buttonAction","buttonText"])):((0,o.openBlock)(),(0,o.createBlock)(c,{key:0,color:"info",label:"Loading..."}))])}var i=t(9980),d=t(64415),c=t(179),m=t(75552);async function p(e,a,t,o){const s=`/apis/provisioning.gorizond.io/v1/namespaces/${a}/clusters/${e}`;try{await o.dispatch("cluster/request",{url:s,method:"GET"});const e={spec:{kubernetesVersion:t}};await o.dispatch("cluster/request",{url:s,method:"PATCH",headers:{"Content-Type":"application/merge-patch+json"},data:e})}catch(n){if(404!==n?.code)throw n;{const s={apiVersion:"provisioning.gorizond.io/v1",kind:"Cluster",metadata:{name:e,namespace:a},spec:{kubernetesVersion:t}};await o.dispatch("cluster/request",{url:`/apis/provisioning.gorizond.io/v1/namespaces/${a}/clusters`,method:"POST",data:s})}}}const u="gorizond";var h={props:{value:{type:Object,default:null},mode:{type:String,required:!0}},components:{Banner:i.l,Card:c.Z,LabeledInput:d.o,LabeledSelect:m.A},data(){return{loaded:!1,model:null,workspaces:[],k8sVersions:[]}},async created(){this.model={...this.value};const e=await this.$store.dispatch("management/request",{url:"/v1-k3s-release/releases"});this.k8sVersions=e.data.map((e=>({label:e.id.replace("+","-"),value:e.id.replace("+","-")})));const a=await this.$store.dispatch("management/findAll",{type:"management.cattle.io.fleetworkspace"}),t=a.sort(((e,a)=>new Date(a.metadata.creationTimestamp)-new Date(e.metadata.creationTimestamp)));this.workspaces=t.map((e=>({label:e.metadata.name,value:e.metadata.name}))),"create"===this.mode&&(this.model.spec={kubernetesVersion:this.k8sVersions.at(-1).value},this.model.metadata.namespace=this.workspaces[0].value),this.loaded=!0},methods:{async onSave(){const e=JSON.parse(JSON.stringify(this.model||{}));try{await p(this.model.metadata.name,this.model.metadata.namespace,this.model.spec.kubernetesVersion,this.$store),this.$router.push({name:`c-cluster-${u}-resource-namespace-id`,params:{id:e.metadata.name,namespace:e.metadata.namespace}})}catch(a){this.$store.dispatch("growl/fromError",{err:a,title:"Failed to create cluster"},{root:!0})}}}},v=t(47433);const b=(0,v.A)(h,[["render",l]]);var k=b}}]);
//# sourceMappingURL=gorizond-ui-0.1.5.umd.min.edit.js.map